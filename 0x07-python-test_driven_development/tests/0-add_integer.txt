the ``0-add_integer`` module
-----------------------------

using ``add_integer``
---------------------
import module:

	>>> add_integer = __import__('0-add_integer').add_integer

test one arg:

>>> add_integer(5)
103

test zero args:

>>> add_integer(0)
98

test both args:

>>> add_integer(5, 5)
10

test first float:

>>> add_integer(5.5, 5)
10

test second float:

>>> add_integer(5, 5.5)
10

test first not integer:

>>> add_integer("hello", 5)
Traceback (most recent call last):
...
TypeError: a must be an integer

test first not integer:

>>> add_integer(5, "hello")
Traceback (most recent call last):
...
TypeError: b must be an integer

test first not integer:

>>> add_integer('a', 5)
Traceback (most recent call last):
...
TypeError: a must be an integer

test first not integer:

>>> add_integer(5, 'b')
Traceback (most recent call last):
...
TypeError: b must be an integer

test first not integer:

>>> add_integer([1, 2, 3], 5)
Traceback (most recent call last):
...
TypeError: a must be an integer

test first not integer:

>>> add_integer(5, [1, 2, 3])
Traceback (most recent call last):
...
TypeError: b must be an integer

test first negative arg:

>>> add_integer(-1)
97

test both negtive args:

>>> add_integer(-2, -5)
-7

test second negative arg:

>>> add_integer(10, -5)
5

test both not integer:

>>> add_integer("a", "b")
Traceback (most recent call last):
...
TypeError: a must be an integer

test invalid args:

>>> add_integer(None, None)
Traceback (most recent call last):
...
TypeError: a must be an integer
